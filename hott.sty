% AUTHOR: Egbert Rijke
% LAST MODIFIED: December 2017

% This package is designed to work with the amsart, amsbook or amsproc document
% classes. It provides a set of macros to facilitate homotopy type theorists.
% Macros are provided for the topics of foundations of homotopy type theory,
% synthetic homotopy theory, internal category theory and set theory, syntax
% and some internal models like the graph model.
%
% This package is based on the preamble of the HoTT book, written by the
% Univalent Foundations Project. 

\NeedsTeXFormat{LaTeX2e}[2016/10/01]
\ProvidesPackage{hott}[2016/10/22 Notation and style package for HoTT]

\RequirePackage{amsmath}
\RequirePackage{amsthm}
\RequirePackage{amssymb}

%The following packages are loaded just to compress the document to well below 300 pages. Also the font size needs to be set to its default 10pt
\RequirePackage[letterpaper,twoside,inner margin=1in,outer margin=1.7in,vmargin=1.15in,marginparwidth=1.3in,marginparsep=.1in]{geometry}
\RequirePackage{marginnote}
%\RequirePackage{mathptmx}

%\PassOptionsToPackage{colorlinks,citecolor=darkblue,linkcolor=darkblue,unicode}{hyperref}


\RequirePackage[utf8]{inputenc}
\RequirePackage{comment}
%\RequirePackage{geometry}

\RequirePackage[english]{babel}

\RequirePackage{csquotes}
\RequirePackage{microtype}
\RequirePackage{booktabs}
\RequirePackage{enumitem}
\RequirePackage{xspace}
\RequirePackage[stable]{footmisc}
\RequirePackage{ifthen}

\RequirePackage{stmaryrd}
\RequirePackage{mathrsfs}
\RequirePackage{mathtools} % for :=
\RequirePackage{wasysym}
\RequirePackage{mathpartir}
\RequirePackage{tikz-cd}
\RequirePackage{tikz}
\usetikzlibrary{decorations.pathmorphing,arrows}
%\RequirePackage[inference]{semantic}
\RequirePackage{bussproofs}
\RequirePackage{tipa} % for textesh
\RequirePackage{marginnote}

\RequirePackage[hyphens]{url} % This package has to be loaded *before* hyperref and biblatex
\RequirePackage[style=numeric,maxnames=10,backend=biber,hyperref=true]{biblatex}
\definecolor{darkblue}{rgb}{0,0.4,0.4}
\RequirePackage[pdfpagelabels,colorlinks,citecolor=orange,linkcolor=darkblue,unicode]{hyperref}
\hypersetup{pdfpagemode=UseOutlines}


%\RequirePackage{caption}
%\DeclareCaptionFormat{myformat}{{\bf #1}#2#3{\color{black!20}\hrulefill}}
%\captionsetup[figure]{format=myformat}


% For some reason the following can't be above hyperref.
\RequirePackage{aliascnt}
\RequirePackage[capitalize]{cleveref}

% The following is to avoid overfull hboxes in the table of contents.
% https://tex.stackexchange.com/questions/49887/overfull-hbox-warning-for-toc-entries-when-using-memoir-documentclass
%\renewcommand*{\cftdotsep}{1}
\setpnumwidth{3em}
\setrmarg{4em}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% THEOREM ENVIRONMENTS %%%%

% Hyperref includes the command \autoref{...} which is like \ref{...}
% except that it automatically inserts the type of the thing you're
% referring to, e.g. it produces "Theorem 3.8" instead of just "3.8"
% (and makes the whole thing a hyperlink).  This saves a slight amount
% of typing, but more importantly it means that if you decide later on
% that 3.8 should be a Lemma or a Definition instead of a Theorem, you
% don't have to change the name in all the places you referred to it.

% The following hack improves on this by using the same counter for
% all theorem-type environments, so that after Theorem 1.1 comes
% Corollary 1.2 rather than Corollary 1.1.  This makes it much easier
% for the reader to find a particular theorem when flipping through
% the document.

\newtheorem{thm}{Theorem}[section]
\crefname{thm}{Theorem}{Theorems}

\def\defthm#1#2#3{%
  %% Ensure all theorem types are numbered with the same counter
  \newaliascnt{#1}{thm}
  \newtheorem{#1}[#1]{#2}
  \aliascntresetthe{#1}
  %% This command tells cleveref's \cref what to call things
  \crefname{#1}{#2}{#3}}

% Now define a bunch of theorem-type environments.
\defthm{cor}{Corollary}{Corollaries}
\defthm{lem}{Lemma}{Lemmas}
\defthm{prp}{Proposition}{Propositions}
\defthm{axiom}{Axiom}{Axioms}
\theoremstyle{definition}
\defthm{defn}{Definition}{Definitions}
\theoremstyle{remark}
\defthm{rmk}{Remark}{Remarks}
\defthm{eg}{Example}{Examples}
\defthm{egs}{Examples}{Examples}
\defthm{notes}{Notes}{Notes}
\defthm{task}{Task}{Tasks}
\defthm{proposal}{Proposal}{Proposals}
% Number exercises within chapters, with their own counter.
%\newtheorem{ex}{Exercise}[chapter]
%\crefname{ex}{Exercise}{Exercises}

% Display format for sections
\crefformat{section}{\S#2#1#3}
\Crefformat{section}{Section~#2#1#3}
\crefrangeformat{section}{\S\S#3#1#4--#5#2#6}
\Crefrangeformat{section}{Sections~#3#1#4--#5#2#6}
\crefmultiformat{section}{\S\S#2#1#3}{ and~#2#1#3}{, #2#1#3}{ and~#2#1#3}
\Crefmultiformat{section}{Sections~#2#1#3}{ and~#2#1#3}{, #2#1#3}{ and~#2#1#3}
\crefrangemultiformat{section}{\S\S#3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}{, #3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}
\Crefrangemultiformat{section}{Sections~#3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}{, #3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}

% Display format for appendices
\crefformat{appendix}{Appendix~#2#1#3}
\Crefformat{appendix}{Appendix~#2#1#3}
\crefrangeformat{appendix}{Appendices~#3#1#4--#5#2#6}
\Crefrangeformat{appendix}{Appendices~#3#1#4--#5#2#6}
\crefmultiformat{appendix}{Appendices~#2#1#3}{ and~#2#1#3}{, #2#1#3}{ and~#2#1#3}
\Crefmultiformat{appendix}{Appendices~#2#1#3}{ and~#2#1#3}{, #2#1#3}{ and~#2#1#3}
\crefrangemultiformat{appendix}{Appendices~#3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}{, #3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}
\Crefrangemultiformat{appendix}{Appendices~#3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}{, #3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}

\crefname{part}{Part}{Parts}

\crefformat{paragraph}{\S#2#1#3}
\Crefformat{paragraph}{Paragraph~#2#1#3}
\crefrangeformat{paragraph}{\S\S#3#1#4--#5#2#6}
\Crefrangeformat{paragraph}{Paragraphs~#3#1#4--#5#2#6}
\crefmultiformat{paragraph}{\S\S#2#1#3}{ and~#2#1#3}{, #2#1#3}{ and~#2#1#3}
\Crefmultiformat{paragraph}{Paragraphs~#2#1#3}{ and~#2#1#3}{, #2#1#3}{ and~#2#1#3}
\crefrangemultiformat{paragraph}{\S\S#3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}{, #3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}
\Crefrangemultiformat{paragraph}{Paragraphs~#3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}{, #3#1#4--#5#2#6}{ and~#3#1#4--#5#2#6}

% Number subsubsections
\setcounter{secnumdepth}{5}

% Display format for figures
\crefname{figure}{Figure}{Figures}
\crefname{table}{Table}{Tables}

% Use cleveref instead of hyperref's \autoref
\let\autoref\cref


%%%% EQUATION NUMBERING %%%%

% The following hack uses the single theorem counter to number
% equations as well, so that we don't have both Theorem 1.1 and
% equation (1.1).

%\let\c@equation\c@thm
%\numberwithin{equation}{section}


%%%% ENUMERATE NUMBERING %%%%

% Number the first level of enumerates as (i), (ii), ...
\renewcommand{\theenumi}{(\roman{enumi})}
\renewcommand{\labelenumi}{\theenumi}


%%%% MARGINS %%%%

% This is a matter of personal preference, but I think the left
% margins on enumerates and itemizes are too wide.
%\setitemize[1]{leftmargin=2em}
%\setenumerate[1]{leftmargin=*}

% Likewise that they are too spaced out.
%\setitemize[1]{itemsep=-0.2em}
%\setenumerate[1]{itemsep=-0.2em}

%%% Notes %%%
\def\noteson{%
\gdef\note##1{\mbox{}\marginpar{\color{blue}\textasteriskcentered\ ##1}}}
\gdef\notesoff{\gdef\note##1{\null}}
\noteson

%%%% CITATIONS %%%%

% \let \cite \citep

%%%% INDEX %%%%

\newcommand{\footstyle}[1]{{\hyperpage{#1}}n} % If you index something that is in a footnote
\newcommand{\defstyle}[1]{\textbf{\hyperpage{#1}}}  % Style for pageref to a definition

\newcommand{\indexdef}[1]{\index{#1|defstyle}}   % Index a definition
\newcommand{\indexfoot}[1]{\index{#1|footstyle}} % Index a term in a footnote
\newcommand{\indexsee}[2]{\index{#1|see{#2}}}    % Index "see also"

%% Use \symlabel instead of \label to mark a pageref that you need in the index of symbols
\newcounter{symindex}
\newcommand{\symlabel}[1]{\refstepcounter{symindex}\label{#1}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% MACROS FOR NOTATION %%%%
% Use these for any notation where there are multiple options.

%%% Definitional equality (used infix) %%%
\newcommand{\jdeq}{\equiv}      % An equality judgment
\newcommand{\defeq}{\vcentcolon\equiv}  % A judgmental equality currently being defined

%%% Term being defined
\newcommand{\define}[1]{\textbf{#1}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Type constructors and quantifiers

%%% Universal quantification of mere propositions
\newcommand{\fall}[1]{\forall_{(#1)}\,\@ifnextchar\bgroup{\fall}{}}

%%% Existential quantifier %%%
\newcommand{\exis}[1]{\exists_{(#1)}\,\@ifnextchar\bgroup{\exis}{}}

%%% Unique existence %%%
\newcommand{\uexis}[1]{\exists!_{(#1)}\,\@ifnextchar\bgroup{\uexis}{}}

%%% Dependent sums %%%
\def\smsym{\sum}
\newcommand{\@thesum}[1]{\smsym_{(#1)}}
\newcommand{\sm}[1]{\@ifnextchar\bgroup{\@sm{#1}\sm}{\@sm{#1}}}
\newcommand{\@sm}[1]{\mathchoice{{\textstyle\@thesum{#1}}}{\@thesum{#1}}{\@thesum{#1}}{\@thesum{#1}}}
\newcommand{\tsm}{\sm}
\newcommand{\tprd}{\prd}

% Other notations related to dependent sums
\newcommand{\pair}{\ensuremath{\mathsf{pair}}\xspace}
\newcommand{\pairr}[1]{{\mathopen{}(#1)\mathclose{}}}
\newcommand{\Pairr}[1]{{\mathopen{}\left(#1\right)\mathclose{}}}
\newcommand{\tup}[2]{(#1,#2)}
\newcommand{\proj}[1]{\ensuremath{\mathsf{pr}_{#1}}\xspace}
\newcommand{\fst}{\ensuremath{\proj1}\xspace}
\newcommand{\snd}{\ensuremath{\proj2}\xspace}

%%%% Dependent products
\def\prdsym{\prod}

%% Call the macro like \prd{x,y:A}{p:x=y} with any number of
%% arguments.  Make sure that whatever comes *after* the call doesn't
%% begin with an open-brace, or it will be parsed as another argument.

%%%% Implicit arguments are possible. In the above example, if x and y are to be
%%%% implicit, then one should write \prd*{x,y:A}{p:x=y}
%%%%
%%%% If one wants to use implicit arguments in the notation for product types,
%%%% a * has to be put before the argument that has to be implicit.
%%%% For example: in $\prd{x:A}*{y:B}{u:P(y)}Q(x,y,u)$, the argument y is
%%%% implicit. Any of the arguments can be made implicit this way.

%%%% First of all, we should make the command \prd search not only for a
%%%% brace, but also for a star. We introduce an auxiliary command that
%%%% determines whether the next character is a star or brace.

\newcommand{\@ifnextchar@starorbrace}[2]
  {\@ifnextchar*{#1}{\@ifnextchar\bgroup{#1}{#2}}}

\newcommand{\@theprd}[1]{\prdsym_{(#1)}}
\newcommand{\@theiprd}[1]{\prdsym_{\{#1\}}}

%%%% When encountering the \prd command, latex should determine whether it
%%%% should print implicit argument brackets or not.
%%%% First, we have the following switch. Set it to true if implicit arguments
%%%% are desired, or to false if not. Note turning off implicit arguments
%%%% might render some parts of the text harder to comprehend, since in the
%%%% text might appear $f(x)$ where we would have $f(i,x)$ without implicit
%%%% arguments.

\DeclareOption{implicit_arguments_on}%
  {\newcommand{\implicitargumentson}{\boolean{true}}}
\DeclareOption{implicit_arguments_off}%
  {\newcommand{\implicitargumentson}{\boolean{false}}}

\ExecuteOptions{implicit_arguments_off}

\ProcessOptions\relax

\newcommand{\prd}{\@ifnextchar*{\@iprd}{\@prd}}
\newcommand{\@prd}[1]
  {\@ifnextchar@starorbrace
    {\@tprd{#1}\prd}
    {\@tprd{#1}}}
\newcommand{\@tprd}[1]{%
  \mathchoice{%
    {{\textstyle\@theprd{#1}}}}{\@theprd{#1}}{\@theprd{#1}}{\@theprd{#1}}}

\newcommand{\@iprd}[2]{\@ifnextchar@starorbrace%
  {\@tiprd{#2}\prd}%
  {\@tiprd{#2}}}
\newcommand{\@tiprd}[1]{
  \ifthenelse{\implicitargumentson}
    {\@@tiprd{#1}}%\@ifnextchar\bgroup{\@tiprd}{}}
    {\@tprd{#1}}}
\newcommand{\@@tiprd}[1]{\mathchoice{{\textstyle\@theiprd{#1}}}{\@theiprd{#1}}{\@theiprd{#1}}{\@theiprd{#1}}}

%%% Lambda abstractions.
% Each variable being abstracted over is a separate argument.  If
% there is more than one such argument, they *must* be enclosed in
% braces.  Arguments can be untyped, as in \lam{x}{y}, or typed with a
% colon, as in \lam{x:A}{y:B}. In the latter case, the colons are
% automatically noticed and (with current implementation) the space
% around the colon is reduced.  You can even give more than one variable
% the same type, as in \lam{x,y:A}.
\def\lam#1{{\lambda}\@lamarg#1:\@endlamarg\@ifnextchar\bgroup{.\,\lam}{.\,}}
\def\@lamarg#1:#2\@endlamarg{\if\relax\detokenize{#2}\relax #1\else\@lamvar{\@lameatcolon#2},#1\@endlamvar\fi}
\def\@lamvar#1,#2\@endlamvar{(#2\,{:}\,#1)}
% \def\@lamvar#1,#2{{#2}^{#1}\@ifnextchar,{.\,{\lambda}\@lamvar{#1}}{\let\@endlamvar\relax}}
\def\@lameatcolon#1:{#1}
\let\lamt\lam
% This version silently eats any typing annotation.
\def\lamu#1{{\lambda}\@lamuarg#1:\@endlamuarg\@ifnextchar\bgroup{.\,\lamu}{.\,}}
\def\@lamuarg#1:#2\@endlamuarg{#1}


%%%% W-types
\def\wtypesym{{\mathrm{W}}}
\def\wtype#1{\@ifnextchar\bgroup%
  {\mathchoice{\@twtype{#1}}{\@twtype{#1}}{\@twtype{#1}}{\@twtype{#1}}\wtype}%
  {\mathchoice{\@twtype{#1}}{\@twtype{#1}}{\@twtype{#1}}{\@twtype{#1}}}}
\def\lwtype#1{\@ifnextchar\bgroup{\@lwtype{#1}\lwtype}{\@@lwtype{#1}}}
\def\@lwtype#1{\mathchoice{{\textstyle\wtypesym}}{\wtypesym}{\wtypesym}{\wtypesym}({\textstyle #1})\;}
\def\@@lwtype#1{\mathchoice{{\textstyle\wtypesym}}{\wtypesym}{\wtypesym}{\wtypesym}({\textstyle #1}),\ }
\def\twtype#1{\@twtype{#1}\@ifnextchar\bgroup{\twtype}{}}
\def\@twtype#1{\mathchoice{{\textstyle\wtypesym_{(#1)}}}{\wtypesym_{(#1)}}{\wtypesym_{(#1)}}{\wtypesym_{(#1)}}}
\def\dwtype#1{\@dwtype{#1}\@ifnextchar\bgroup{\dwtype}{}}
\def\@dwtype#1{\wtypesym_{(#1)}\,}

\newcommand{\suppsym}{{\mathsf{sup}}}
\newcommand{\supp}{\ensuremath\suppsym\xspace}

\def\wtypeh#1{\@ifnextchar\bgroup%
  {\mathchoice{\@lwtypeh{#1}}{\@twtypeh{#1}}{\@twtypeh{#1}}{\@twtypeh{#1}}\wtypeh}%
  {\mathchoice{\@@lwtypeh{#1}}{\@twtypeh{#1}}{\@twtypeh{#1}}{\@twtypeh{#1}}}}
\def\lwtypeh#1{\@ifnextchar\bgroup{\@lwtypeh{#1}\lwtypeh}{\@@lwtypeh{#1}}}
\def\@lwtypeh#1{\mathchoice{{\textstyle\wtypesym^h}}{\wtypesym^h}{\wtypesym^h}{\wtypesym^h}({\textstyle #1})\;}
\def\@@lwtypeh#1{\mathchoice{{\textstyle\wtypesym^h}}{\wtypesym^h}{\wtypesym^h}{\wtypesym^h}({\textstyle #1}),\ }
\def\twtypeh#1{\@twtypeh{#1}\@ifnextchar\bgroup{\twtypeh}{}}
\def\@twtypeh#1{\mathchoice{{\textstyle\wtypesym^h_{(#1)}}}{\wtypesym^h_{(#1)}}{\wtypesym^h_{(#1)}}{\wtypesym^h_{(#1)}}}
\def\dwtypeh#1{\@dwtypeh{#1}\@ifnextchar\bgroup{\dwtypeh}{}}
\def\@dwtypeh#1{\wtypesym^h_{(#1)}\,}

\newcommand{\ac}{\ensuremath{\mathsf{ac}}\xspace} % not needed in symbol index
\newcommand{\un}{\ensuremath{\mathsf{upun}}\xspace} % not needed in symbol index, uniqueness principle for unit type

\newcommand{\usc}{\underline{\ }}

\newcommand{\idfunc}[1][]{\mathsf{id}_{#1}}
\newcommand{\const}{\mathsf{const}}
\newcommand{\evpair}{\mathsf{ev\usc{}pair}}
\newcommand{\evpt}{\mathsf{ev\usc{}pt}}
\newcommand{\evtruefalse}{\mathsf{ev\usc{}true\usc{}false}}
\newcommand{\evrefl}{\mathsf{ev\usc{}refl}}
\newcommand{\evunit}{\mathsf{ev\usc{}unit}}
\newcommand{\suc}{\mathsf{succ}}
\newcommand{\rec}[1]{\mathsf{rec}_{#1}}
\newcommand{\ind}[1]{\mathsf{ind}_{#1}}
\newcommand{\indid}[1]{\ind{=_{#1}}} % (Martin-Lof) path induction principle for identity types
\newcommand{\indidb}[1]{\ind{=_{#1}}'} % (Paulin-Mohring) based path induction principle for identity types 
\newcommand{\singind}{\mathsf{sing\usc{}ind}}
\newcommand{\singcomp}{\mathsf{sing\usc{}comp}}
\newcommand{\refl}[1]{\mathsf{refl}_{#1}}
\newcommand{\concat}{\mathsf{concat}}
\newcommand{\leftunit}{\mathsf{left\usc{}unit}}
\newcommand{\rightunit}{\mathsf{right\usc{}unit}}
\newcommand{\cohunit}{\mathsf{coh\usc{}unit}}
\newcommand{\invfunc}{\mathsf{inv}}
\newcommand{\leftinv}{\mathsf{left\usc{}inv}}
\newcommand{\rightinv}{\mathsf{right\usc{}inv}}
\newcommand{\cohinv}{\mathsf{coh\usc{}inv}}
\newcommand{\assoc}{\mathsf{assoc}}
\newcommand{\apid}{\mathsf{ap\usc{}id}}
\newcommand{\apcomp}{\mathsf{ap\usc{}comp}}
\newcommand{\aprefl}{\mathsf{ap\usc{}refl}}
\newcommand{\apinv}{\mathsf{ap\usc{}inv}}
\newcommand{\apconcat}{\mathsf{ap\usc{}concat}}
\newcommand{\tr}{\mathsf{tr}}
\newcommand{\htpy}{\sim}
\newcommand{\htpyrefl}{\mathsf{htpy\usc{}refl}}
\newcommand{\htpyinv}{\mathsf{htpy\usc{}inv}}
\newcommand{\htpyconcat}{\mathsf{htpy\usc{}concat}}
\newcommand{\sections}{\mathsf{sec}}
\newcommand{\retractions}{\mathsf{retr}}
\newcommand{\isequiv}{\mathsf{is\usc{}equiv}}
\newcommand{\eqvsym}{\simeq}    % infix symbol
\newcommand{\eqv}[2]{\@ifnextchar\bgroup{#1 \eqvsym \eqv{#2}}{#1 \eqvsym #2}}
\newcommand{\hasinverse}{\mathsf{has\usc{}inverse}}
\newcommand{\paireq}{\mathsf{pair\usc{}eq}}
\newcommand{\eqpair}{\mathsf{eq\usc{}pair}}
\newcommand{\iscontr}{\ensuremath{\mathsf{is\usc{}contr}}}
\newcommand{\fibf}[1]{\mathsf{fib}_{#1}}
\newcommand{\fib}[2]{\mathsf{fib}_{#1}(#2)}
\newcommand{\Fib}[2]{\mathsf{fib}_{#1}\left(#2\right)}
\newcommand{\isset}{\ensuremath{\mathsf{is\usc{}set}}}
\newcommand{\isprop}{\ensuremath{\mathsf{is\usc{}prop}}}
\newcommand{\istrunc}[1]{\mathsf{is\usc{}trunc}_{#1}}
\newcommand{\isemb}{\mathsf{is\usc{}emb}}
\newcommand{\eqequiv}{\mathsf{eq\usc{}equiv}}
\newcommand{\equiveq}{\mathsf{equiv\usc{}eq}}
\newcommand{\eqhtpy}{\mathsf{eq\usc{}htpy}}
\newcommand{\htpyeq}{\mathsf{htpy\usc{}eq}}
\newcommand{\esssmall}{\mathsf{ess\usc{}small}}
\newcommand{\locsmall}{\mathsf{loc\usc{}small}}
\newcommand{\isclassified}{\mathsf{is\usc{}classified}}
\newcommand{\universalfam}{\mathrm{El}}
\newcommand{\ispullback}{\mathsf{is\usc{}pullback}}
\newcommand{\precomp}[1]{{#1}^\ast}
\newcommand{\pathsplit}{\mathsf{path\usc{}split}}
\newcommand{\halfadj}{\mathsf{half\usc{}adj}}
\newcommand{\tottriangle}{\mathsf{tot\usc{}triangle}}
\newcommand{\fibtriangle}{\mathsf{fib\usc{}triangle}}
\newcommand{\cone}{\mathsf{cone}}
\newcommand{\conemap}{\mathsf{cone\usc{}map}}
\newcommand{\gap}{\mathsf{gap}}
\newcommand{\idp}{\mathsf{id}^\ast}
\newcommand{\FibSeq}{\mathsf{Fib\usc{}Seq}}
\newcommand{\equivpt}{\mathsf{equiv\usc{}pt}}
\newcommand{\ptequiv}{\mathsf{pt\usc{}equiv}}
\newcommand{\prop}{\mathsf{Prop}}

\newcommand{\cocone}{\mathsf{cocone}}
\newcommand{\coconemap}{\mathsf{cocone\usc{}map}}

\newcommand{\truncunit}[1]{|#1|}

%%% the uniqueness principle for product types, formerly called surjective pairing and named \spr:
\newcommand{\uppt}{\ensuremath{\mathsf{uppt}}\xspace}

% Paths in pairs
\newcommand{\pairpath}{\ensuremath{\mathsf{pair}^{\mathord{=}}}\xspace}
% \newcommand{\projpath}[1]{\proj{#1}^{\mathord{=}}}
\newcommand{\projpath}[1]{\ensuremath{\apfunc{\proj{#1}}}\xspace}

% \newcommand{\type}{\ensuremath{\mathsf{Type}}} % this command is overridden below, so it's commented out
\DeclareMathOperator{\im}{im} % the image

%%% 2D path operations
\newcommand{\leftwhisker}{\mathbin{{\ct}_{\ell}}}
\newcommand{\rightwhisker}{\mathbin{{\ct}_{r}}}
\newcommand{\hct}{\star}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Identity types %%%
\newcommand{\idsymbin}{=}
\newcommand{\idsym}{{\idsymbin}}
\newcommand{\id}[3][]{
  \@ifnextchar\bgroup
    {#2 \mathbin{\idsym_{#1}} \id[#1]{#3}}
    {#2 \mathbin{\idsym_{#1}} #3}
  }
\newcommand{\idtype}[3][]{\ensuremath{\mathsf{Id}_{#1}(#2,#3)}\xspace}
\newcommand{\idtypevar}[1]{\ensuremath{\mathsf{Id}_{#1}}\xspace}
% A propositional equality currently being defined
\newcommand{\defid}{\coloneqq}

\newcommand{\totalpath}[1]{P_{#1}}

%%% Dependent paths
\newcommand{\dpath}[4]{#3 =^{#1}_{#2} #4}

%%% Path concatenation (used infix, in diagrammatic order) %%%
\newcommand{\ctsym}{%
  \mathchoice{\mathbin{\raisebox{0.5ex}{$\displaystyle\centerdot$}}}%
             {\mathbin{\raisebox{0.5ex}{$\centerdot$}}}%
             {\mathbin{\raisebox{0.25ex}{$\scriptstyle\,\centerdot\,$}}}%
             {\mathbin{\raisebox{0.1ex}{$\scriptscriptstyle\,\centerdot\,$}}}
  }
\newcommand{\ct}[3][]{
  \@ifnextchar\bgroup
    {#2 \mathbin{\ctsym_{#1}} \ct[#1]{#3}}
    {#2 \mathbin{\ctsym_{#1}} #3}
  }

%%% Path reversal %%%
\newcommand{\opp}[1]{\mathord{{#1}^{-1}}}
\let\rev\opp

%%% Transport (covariant) %%%
\newcommand{\trans}[2]{\ensuremath{{#1}_{*}\mathopen{}\left({#2}\right)\mathclose{}}\xspace}
\let\Trans\trans
%\newcommand{\Trans}[2]{\ensuremath{{#1}_{*}\left({#2}\right)}\xspace}
\newcommand{\transf}[1]{\ensuremath{{#1}_{*}}\xspace} % Without argument
%\newcommand{\transport}[2]{\ensuremath{\mathsf{transport}_{*} \: {#2}\xspace}}
\newcommand{\transfib}[3]{\ensuremath{\mathsf{transport}^{#1}(#2,#3)\xspace}}
\newcommand{\Transfib}[3]{\ensuremath{\mathsf{transport}^{#1}\Big(#2,\, #3\Big)\xspace}}
\newcommand{\transfibf}[1]{\ensuremath{\mathsf{transport}^{#1}\xspace}}

%%% 2D transport
\newcommand{\transtwo}[2]{\ensuremath{\mathsf{transport}^2\mathopen{}\left({#1},{#2}\right)\mathclose{}}\xspace}

%%% Constant transport
\newcommand{\transconst}[3]{\ensuremath{\mathsf{transportconst}}^{#1}_{#2}(#3)\xspace}
\newcommand{\transconstf}{\ensuremath{\mathsf{transportconst}}\xspace}

%%% Map on paths %%%
\newcommand{\mapfunc}[1]{\ensuremath{\mathsf{ap}_{#1}}\xspace} % Without argument
\newcommand{\map}[2]{\mapfunc{#1}\left({#2}\right)\xspace}
\let\Ap\map
%\newcommand{\Ap}[2]{\ensuremath{{#1}\left({#2}\right)}\xspace}
\newcommand{\mapdepfunc}[1]{\ensuremath{\mathsf{apd}_{#1}}\xspace} % Without argument
% \newcommand{\mapdep}[2]{\ensuremath{{#1}\llparenthesis{#2}\rrparenthesis}\xspace}
\newcommand{\mapdep}[2]{\ensuremath{\mapdepfunc{#1}\mathopen{}\left(#2\right)\mathclose{}}\xspace}
\let\apfunc\mapfunc
\let\ap\map
\let\apdfunc\mapdepfunc
\let\apd\mapdep

%%% 2D map on paths
\newcommand{\aptwofunc}[1]{\ensuremath{\mathsf{ap}^2_{#1}}\xspace}
\newcommand{\aptwo}[2]{\ensuremath{\aptwofunc{#1}\mathopen{}\left({#2}\right)\mathclose{}}\xspace}
\newcommand{\apdtwofunc}[1]{\ensuremath{\mathsf{apd}^2_{#1}}\xspace}
\newcommand{\apdtwo}[2]{\ensuremath{\apdtwofunc{#1}\mathopen{}\left(#2\right)\mathclose{}}\xspace}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Basic types

%%% The empty type
\newcommand{\emptyt}{\ensuremath{\mathbf{0}}\xspace}

%%% The unit type
\newcommand{\unit}{\ensuremath{\mathbf{1}}\xspace}
\newcommand{\ttt}{\ensuremath{\star}\xspace}

%%% The two-element type
\newcommand{\bool}{\ensuremath{\mathbf{2}}\xspace}
\newcommand{\btrue}{{1_{\bool}}}
\newcommand{\bfalse}{{0_{\bool}}}
\newcommand{\bneg}{\mathsf{neg}}

%%% Injections into binary sums and pushouts
\newcommand{\inlsym}{{\mathsf{inl}}}
\newcommand{\inrsym}{{\mathsf{inr}}}
\newcommand{\inl}{\ensuremath\inlsym\xspace}
\newcommand{\inr}{\ensuremath\inrsym\xspace}

\newcommand{\seqin}{\mathsf{seq\usc{}in}}
\newcommand{\quotientrestr}{\mathsf{quotient\usc{}restr}}

%%% The interval
\newcommand{\interval}{\ensuremath{I}\xspace}
\newcommand{\izero}{\ensuremath{0_{\interval}}\xspace}
\newcommand{\ione}{\ensuremath{1_{\interval}}\xspace}
\newcommand{\seg}{\ensuremath{\mathsf{seg}}\xspace}

%%% Free groups
\newcommand{\freegroup}[1]{F(#1)}
\newcommand{\freegroupx}[1]{F'(#1)} % the "other" free group

%%% Glue of a pushout
\newcommand{\gluesym}{{\mathsf{glue}}}
\newcommand{\jglue}{\ensuremath\gluesym\xspace}
\newcommand{\glue}{\mathsf{glue}}

%%% Circles and spheres
\newcommand{\sphere}[1]{\mathbb{S}^{#1}}
\newcommand{\Sn}{\mathbb{S}}
\newcommand{\base}{\ensuremath{\mathsf{base}}\xspace}
\newcommand{\lloop}{\ensuremath{\mathsf{loop}}\xspace}
\newcommand{\surf}{\ensuremath{\mathsf{surf}}\xspace}
\newcommand{\Thom}{\mathrm{Th}}

%%% Suspension
\newcommand{\susp}[1][]{\mathsf{\Sigma}^{#1}}
\newcommand{\suspspec}{\susp[\infty]}
\newcommand{\north}{\mathsf{N}}
\newcommand{\south}{\mathsf{S}}
\newcommand{\merid}{\mathsf{merid}}
\newcommand{\spectrify}{L_{\mathrm{Spec}}}
\newcommand{\spshift}[1]{\mathsf{\Sigma}^{#1}}
\newcommand{\mapsp}{\mathsf{Map}_\ast}

\newcommand{\sequence}[3][n]{({#2}_{#1},{#3}_{#1})_{#1}}

%%% Natural numbers
\newcommand{\N}{\ensuremath{\mathbb{N}}\xspace}
%\newcommand{\N}{\textbf{N}}
\let\nat\N
\newcommand{\natp}{\ensuremath{\nat'}\xspace} % alternative nat in induction chapter
\newcommand{\R}{\mathbb{R}}

\newcommand{\zerop}{\ensuremath{0'}\xspace}   % alternative zero in induction chapter
\newcommand{\sucp}{\ensuremath{\suc'}\xspace} % alternative suc in induction chapter
\newcommand{\add}{\mathsf{add}}
\newcommand{\ack}{\mathsf{ack}}
\newcommand{\ite}{\mathsf{iter}}
\newcommand{\dbl}{\ensuremath{\mathsf{double}}}
\newcommand{\dblp}{\ensuremath{\dbl'}\xspace} % alternative double in induction chapter


%%% Lists
\newcommand{\lst}[1]{\mathsf{List}(#1)}
\newcommand{\nil}{\mathsf{nil}}
\newcommand{\cons}{\mathsf{cons}}

%%% Vectors of given length, used in induction chapter
\newcommand{\vect}[2]{\ensuremath{\mathsf{Vec}_{#1}(#2)}\xspace}

%%% Integers
\newcommand{\Z}{\ensuremath{\mathbb{Z}}\xspace}
\newcommand{\Zmodtwo}{\Z_2}
\newcommand{\Zsuc}{\mathsf{succ}}
\newcommand{\Zpred}{\mathsf{pred}}

%%% Rationals
\newcommand{\Q}{\ensuremath{\mathbb{Q}}\xspace}

%%% Macros for real numbers
\newcommand{\RC}{\ensuremath{\mathbb{R}_\mathsf{c}}\xspace} % Cauchy
\newcommand{\RD}{\ensuremath{\mathbb{R}_\mathsf{d}}\xspace} % Dedekind
\newcommand{\bbR}{\ensuremath{\mathbb{R}}\xspace}  
\newcommand{\bbC}{\ensuremath{\mathbb{C}}\xspace}
\newcommand{\bbH}{\ensuremath{\mathbb{H}}\xspace}
\newcommand{\barRD}{\ensuremath{\bar{\mathbb{R}}_\mathsf{d}}\xspace} % Dedekind completion of Dedekind

\newcommand{\close}[1]{\sim_{#1}} % Relation of closeness
\newcommand{\closesym}{\mathord\sim}
\newcommand{\rclim}{\mathsf{lim}} % HIT constructor for Cauchy reals
\newcommand{\rcrat}{\mathsf{rat}} % Embedding of rationals into Cauchy reals
\newcommand{\rceq}{\mathsf{eq}_{\RC}} % HIT path constructor
\newcommand{\CAP}{\mathcal{C}}    % The type of Cauchy approximations
\newcommand{\Qp}{\Q_{+}}
\newcommand{\apart}{\mathrel{\#}}  % apartness
\newcommand{\dcut}{\mathsf{isCut}}  % Dedekind cut
\newcommand{\cover}{\triangleleft} % inductive cover
\newcommand{\intfam}[3]{(#2, \lam{#1} #3)} % family of rational intervals

% Macros for the Cauchy reals construction
\newcommand{\bsim}{\frown}
\newcommand{\bbsim}{\smile}

\newcommand{\hapx}{\diamondsuit\approx}
\newcommand{\hapname}{\diamondsuit}
\newcommand{\hapxb}{\heartsuit\approx}
\newcommand{\hapbname}{\heartsuit}
\newcommand{\tap}[1]{\bullet\approx_{#1}\triangle}
\newcommand{\tapname}{\triangle}
\newcommand{\tapb}[1]{\bullet\approx_{#1}\square}
\newcommand{\tapbname}{\square}

%%% Macros for surreals
\newcommand{\NO}{\ensuremath{\mathsf{No}}\xspace}
\newcommand{\surr}[2]{\{\,#1\,\big|\,#2\,\}}
\newcommand{\LL}{\mathcal{L}}
\newcommand{\RR}{\mathcal{R}}
\newcommand{\noeq}{\mathsf{eq}_{\NO}} % HIT path constructor

\newcommand{\ble}{\trianglelefteqslant}
\newcommand{\blt}{\vartriangleleft}
\newcommand{\bble}{\sqsubseteq}
\newcommand{\bblt}{\sqsubset}

\newcommand{\hle}{\diamondsuit\preceq}
\newcommand{\hlt}{\diamondsuit\prec}
\newcommand{\hlname}{\diamondsuit}
\newcommand{\hleb}{\heartsuit\preceq}
\newcommand{\hltb}{\heartsuit\prec}
\newcommand{\hlbname}{\heartsuit}
% \newcommand{\tle}{(\bullet\preceq\triangle)}
% \newcommand{\tlt}{(\bullet\prec\triangle)}
\newcommand{\tle}{\triangle\preceq}
\newcommand{\tlt}{\triangle\prec}
\newcommand{\tlname}{\triangle}
% \newcommand{\tleb}{(\bullet\preceq\square)}
% \newcommand{\tltb}{(\bullet\prec\square)}
\newcommand{\tleb}{\square\preceq}
\newcommand{\tltb}{\square\prec}
\newcommand{\tlbname}{\square}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Functions

%%% Map on total spaces %%%
\newcommand{\total}[2][]{\ensuremath{\mathsf{tot}_{#1}(#2)}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Binary relations

%%% Other meanings of \sim
\newcommand{\bisim}{\sim}       % bisimulation
\newcommand{\eqr}{\sim}         % an equivalence relation

\newcommand{\eqvspaced}[2]{\ensuremath{#1 \;\simeq\; #2}\xspace}
\newcommand{\texteqv}[2]{\ensuremath{\mathsf{Equiv}(#1,#2)}\xspace}
\newcommand{\ptdeqvsym}{\simeq_\ast}    % infix symbol
\newcommand{\ptdeqv}[2]{
  \@ifnextchar\bgroup
    {#1 \ptdeqvsym \ptdeqv{#2}}
    {#1 \ptdeqvsym #2}
  }

%%% Isomorphism of set-level structures
\newcommand{\isomsym}{\cong}
\newcommand{\isom}[2]{
  \@ifnextchar\bgroup
    {#1 \isomsym \eqv{#2}}
    {#1 \isomsym #2}
  }

%%% Sets
\newcommand{\bin}{\ensuremath{\mathrel{\widetilde{\in}}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Universes, subuniverses and modal operators

%%% Universe types %%%
\newcommand{\UU}{\mathcal{U}}
\newcommand{\type}{\mathsf{Type}}

% Universes of truncated types
\newcommand{\typele}[1]{\ensuremath{{#1}\text-\mathsf{Type}}\xspace}
\newcommand{\typeleU}[1]{\ensuremath{{#1}\text-\mathsf{Type}_\UU}\xspace}
\newcommand{\typelep}[1]{\ensuremath{{(#1)}\text-\mathsf{Type}}\xspace}
\newcommand{\typelepU}[1]{\ensuremath{{(#1)}\text-\mathsf{Type}_\UU}\xspace}
\let\ntype\typele
\let\ntypeU\typeleU
\let\ntypep\typelep
\let\ntypepU\typelepU
\newcommand{\set}{\ensuremath{\mathsf{Set}}\xspace}
\newcommand{\setU}{\ensuremath{\mathsf{Set}_\UU}\xspace}
\newcommand{\propU}{\ensuremath{\mathsf{Prop}_\UU}\xspace}

%Pointed types
\newcommand{\pointed}[1]{\ensuremath{#1_\bullet}}
%%% (pointed) mapping spaces
\newcommand{\Map}{\mathsf{Map}}

%%% Univalence
\newcommand{\ua}{\ensuremath{\mathsf{ua}}\xspace} % the inverse of idtoeqv
\newcommand{\idtoeqv}{\ensuremath{\mathsf{idtoeqv}}\xspace}
\newcommand{\univalence}{\ensuremath{\mathsf{univalence}}\xspace} % the full axiom


\newcommand{\trunc}[2]{\Vert #2\Vert_{#1}}
\newcommand{\ttrunc}[2]{\bigl\Vert #2\bigr\Vert_{#1}}
\newcommand{\Trunc}[2]{\left\Vert #2\right\Vert_{#1}}
\newcommand{\truncf}[1]{\Vert \blank \Vert_{#1}}
\newcommand{\tproj}[3][]{\mathopen{}\left|#3\right|_{#2}^{#1}\mathclose{}}
\newcommand{\tprojf}[2][]{|\blank|_{#2}^{#1}}
\def\pizero{\trunc0}

%%% Macros for n-types
\newcommand{\istype}[1]{\mathsf{is\usc{}}{#1}\mbox{-}\mathsf{type}}
\newcommand{\nplusone}{\ensuremath{(n+1)}}
\newcommand{\nminusone}{\ensuremath{(n-1)}}
\newcommand{\fact}{\mathsf{fact}}

\newcommand{\brck}[1]{\trunc{}{#1}}
\newcommand{\bbrck}[1]{\ttrunc{}{#1}}
\newcommand{\Brck}[1]{\Trunc{}{#1}}
\newcommand{\bproj}[1]{\tproj{}{#1}}
\newcommand{\bprojf}{\tprojf{}}

%%% modalities %%%
\newcommand{\modal}{\ensuremath{\ocircle}}
\let\reflect\modal
\newcommand{\modaltype}{\ensuremath{\type_\modal}}
\newcommand{\modalUU}{\ensuremath{\UU_\modal}}
% \newcommand{\ism}[1]{\ensuremath{\mathsf{is}_{#1}}}
% \newcommand{\ismodal}{\ism{\modal}}
% \newcommand{\existsmodal}{\ensuremath{{\exists}_{\modal}}}
% \newcommand{\existsmodalunique}{\ensuremath{{\exists!}_{\modal}}}
% \newcommand{\modalfunc}{\textsf{\modal-fun}}
% \newcommand{\Ecirc}{\ensuremath{\mathsf{E}_\modal}}
% \newcommand{\Mcirc}{\ensuremath{\mathsf{M}_\modal}}
\newcommand{\mreturn}{\ensuremath{\eta}}
\let\project\mreturn
%\newcommand{\mbind}[1]{\ensuremath{\hat{#1}}}
\newcommand{\ext}{\mathsf{ext}}
%\newcommand{\mmap}[1]{\ensuremath{\bar{#1}}}
%\newcommand{\mjoin}{\ensuremath{\mreturn^{-1}}}
% Subuniverse
\renewcommand{\P}{\ensuremath{\type_{P}}\xspace}
\newcommand{\islocal}[1]{\mathsf{is\usc{}local}_{#1}}
\newcommand{\modalunit}[1][]{{\eta_{#1}}}
\newcommand{\plus}[1]{{{#1}^+}}
\newcommand{\localization}[1]{\mathcal{L}_{#1}}
\newcommand{\ismodal}{\ensuremath{\mathsf{is\usc{}modal}}}
\newcommand{\natunit}{\mathsf{nat\usc{}unit}}
\newcommand{\isetale}{\mathsf{is\usc{}etale}}
\newcommand{\etmap}{\mathsf{etale\usc{}map}}

% Projection and extension for truncations
\let\extendsmb\ext
\newcommand{\extend}[1]{\extendsmb(#1)}

%%% Ordinals and cardinals
\newcommand{\card}{\ensuremath{\mathsf{Card}}\xspace}
\newcommand{\ord}{\ensuremath{\mathsf{Ord}}\xspace}
\newcommand{\ordsl}[2]{{#1}_{/#2}}

%%% Some categories
\newcommand{\uset}{\ensuremath{\mathcal{S}et}\xspace}
\newcommand{\ucat}{\ensuremath{{\mathcal{C}at}}\xspace}
\newcommand{\urel}{\ensuremath{\mathcal{R}el}\xspace}
\newcommand{\uhilb}{\ensuremath{\mathcal{H}ilb}\xspace}
\newcommand{\utype}{\ensuremath{\mathcal{T}\!ype}\xspace}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Miscellaneous stuff

\newcommand{\fibration}{\twoheadrightarrow}
\newcommand{\Sq}[1]{\mathrm{Sq}^{#1}}

%%% Function extensionality
\newcommand{\funext}{\mathsf{funExt}}
\newcommand{\happly}{\mathsf{hApply}}

%%% A naturality lemma
\newcommand{\com}[3]{\mathsf{swap}_{#1,#2}(#3)}

% Function definition with domain and codomain
\newcommand{\function}[4]{\left\{\begin{array}{rcl}#1 &
      \longrightarrow & #2 \\ #3 & \longmapsto & #4 \end{array}\right.}

% Apply a function to a cocone
\newcommand{\composecocone}[2]{#1\circ#2}
\newcommand{\composecone}[2]{#2\circ#1}
%%% Diagrams
\newcommand{\Ddiag}{\mathscr{D}}

\newcommand{\qinv}{\ensuremath{\mathsf{qinv}}}
\newcommand{\ishae}{\ensuremath{\mathsf{ishae}}}
\newcommand{\linv}{\ensuremath{\mathsf{linv}}}
\newcommand{\rinv}{\ensuremath{\mathsf{rinv}}}
\newcommand{\biinv}{\ensuremath{\mathsf{biinv}}}
\newcommand{\lcoh}[3]{\mathsf{lcoh}_{#1}(#2,#3)}
\newcommand{\rcoh}[3]{\mathsf{rcoh}_{#1}(#2,#3)}

%%% Macros for the formal type theory
\newcommand{\emptyctx}{\ensuremath{\cdot}}
\newcommand{\production}{\vcentcolon\vcentcolon=}
\newcommand{\conv}{\downarrow}
\newcommand{\wfctx}[1]{#1\ \ctx}
\newcommand{\oftp}[3]{#1 \vdash #2 : #3}
\newcommand{\jdeqtp}[4]{#1 \vdash #2 \jdeq #3 : #4}
\newcommand{\judg}[2]{#1 \vdash #2}
\newcommand{\tmtp}[2]{#1 \mathord{:} #2}

% rule names
\newcommand{\form}{\textsc{form}}
\newcommand{\intro}{\textsc{intro}}
\newcommand{\elim}{\textsc{elim}}
\newcommand{\comp}{\textsc{comp}}
\newcommand{\uniq}{\textsc{uniq}}
\newcommand{\Weak}{\mathsf{Wkg}}
\newcommand{\Vble}{\mathsf{Vble}}
\newcommand{\Exch}{\mathsf{Exch}}
\newcommand{\Subst}{\mathsf{Subst}}

%%% Macros for induction
\newcommand{\natw}{\ensuremath{\mathbf{N^w}}\xspace}
\newcommand{\zerow}{\ensuremath{0^\mathbf{w}}\xspace}
\newcommand{\sucw}{\ensuremath{\mathbf{s^w}}\xspace}
\newcommand{\nalg}{\nat\mathsf{Alg}}
\newcommand{\nhom}{\nat\mathsf{Hom}}
\newcommand{\ishinitw}{\mathsf{is\usc{}hinit}_{\wtypesym}}
\newcommand{\ishinitn}{\mathsf{is\usc{}hinit}_\nat}
\newcommand{\w}{\wtypesym}
\newcommand{\walg}{\w\mathsf{Alg}}
\newcommand{\whom}{\w\mathsf{Hom}}

%%% Code/encode/decode
\newcommand{\code}{\ensuremath{\mathsf{code}}\xspace}
\newcommand{\encode}{\ensuremath{\mathsf{encode}}\xspace}
\newcommand{\decode}{\ensuremath{\mathsf{decode}}\xspace}

\newcommand{\Vect}{\ensuremath{\mathsf{Vec}}}
\newcommand{\Fin}{\ensuremath{\mathsf{Fin}}}
\newcommand{\fmax}{\ensuremath{\mathsf{fmax}}}
\newcommand{\seq}[1]{\langle #1\rangle}

\newcommand{\Hq}{\mathbb{H}}
\newcommand{\Oc}{\mathbb{O}}
\newcommand{\rprojective}[1]{\mathbb{R}\mathsf{P}^{#1}}
\newcommand{\cprojective}[1]{\mathbb{C}\mathsf{P}^{#1}}
\newcommand{\hprojective}[1]{\mathbb{H}\mathsf{P}^{#1}}
\newcommand{\oprojective}[1]{\mathbb{O}\mathsf{P}^{#1}}
\newcommand{\antipodal}[1]{\mathsf{antipodal}_{#1}}
\DeclareMathOperator{\Aut}{Aut}
\DeclareMathOperator{\BAut}{Baut}

\newcommand{\tautfam}[2][]{\gamma_{#1}^{#2}}
\newcommand{\orthcomp}[2][]{\beta_{#1}^{#2}}

\newcommand{\dirsum}[2]{#1\oplus #2}
\newcommand{\tensor}[2]{#1\otimes #2}

% Big parentheses
\newcommand{\Parens}[1]{\Bigl(#1\Bigr)}

%%% Blanks (shorthand for lambda abstractions)
\newcommand{\blank}{\mathord{\hspace{1pt}\text{--}\hspace{1pt}}}

%%% Nameless objects
\newcommand{\nameless}{\mathord{\hspace{1pt}\underline{\hspace{1ex}}\hspace{1pt}}}

\newcommand{\mentalpause}{\medskip} % Use for "mental" pause, instead of \smallskip or \medskip

\newcommand{\Coq}{\textsc{Coq}\xspace}
\newcommand{\Agda}{\textsc{Agda}\xspace}
\newcommand{\NuPRL}{\textsc{NuPRL}\xspace}

%%%% Standard phrasing or spelling of common phrases %%%%

\newcommand{\ZF}{Zermelo--Fraenkel}
\newcommand{\CZF}{Constructive \ZF{} Set Theory}

\newcommand{\LEM}[1]{\ensuremath{\mathsf{LEM}_{#1}}\xspace}
\newcommand{\choice}[1]{\ensuremath{\mathsf{AC}_{#1}}\xspace}

\newcommand{\spectrum}{\mathbf}
\newcommand{\smashpr}[2]{#1 \wedge #2}
\newcommand{\wedgepr}[2]{#1 \vee #2}
\newcommand{\cuppr}[2]{#1 \mathbin{\cupsym} #2}
\newcommand{\cupsym}{\smallsmile}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% The following is a big unorganized list of new macros that we use in the
%%%% notes. 

\newcommand{\tfW}{\mathsf{W}}
\newcommand{\tfM}{\mathsf{M}}
\newcommand{\mfM}{\modelfont{M}}
\newcommand{\mfN}{\modelfont{N}}
\newcommand{\tfctx}{\mathsf{ctx}}
\newcommand{\mftypfunc}[1]{{\modelfont{typ}^{#1}}}
\newcommand{\mftyp}[2]{{\mftypfunc{#1}(#2)}}
\newcommand{\tftypfunc}[1]{{\mathsf{typ}^{#1}}}
\newcommand{\tftyp}[2]{{\tftypfunc{#1}(#2)}}
\newcommand{\hfibfunc}[1]{\mathsf{fib}_{#1}}
\newcommand{\mappingcone}[1]{\mathcal{C}_{#1}}
\newcommand{\equifib}{\mathsf{equiFib}}
\newcommand{\eqfop}{\mathsf{EqF}}
\newcommand{\eqf}[1]{\eqfop(#1)}
\newcommand{\tfcolim}{\mathsf{colim}}
\newcommand{\colim}{\mathsf{colim}}
\renewcommand{\lim}{\mathsf{lim}}
\newcommand{\tflim}{\mathsf{lim}}
\newcommand{\tfdiag}{\mathsf{diag}}
\newcommand{\tfGraph}{\mathsf{Graph}}
\newcommand{\mfGraph}{\modelfont{Graph}}
\newcommand{\unitGraph}{\unit^\mfGraph}
\newcommand{\UUGraph}{\UU^\mfGraph}
\newcommand{\tfrGraph}{\mathsf{rGraph}}
\newcommand{\mfrGraph}{\modelfont{rGraph}}
\newcommand{\isfunction}{\mathsf{is\usc{}function}}
\newcommand{\tflimits}{\mathsf{limits}}
\newcommand{\tfcolimits}{\mathsf{colimits}}
\newcommand{\islimiting}{\mathsf{is\usc{}limiting}}
\newcommand{\iscolimiting}{\mathsf{is\usc{}colimiting}}
\newcommand{\islimit}{\mathsf{is\usc{}limit}}
\newcommand{\iscolimit}{\mathsf{is\usc{}colimit}}
\newcommand{\pbcone}{\mathsf{cone_{pb}}}
\newcommand{\tfinj}{\mathsf{inj}}
\newcommand{\tfsurj}{\mathsf{surj}}
\newcommand{\issurj}{\mathsf{is\usc{}surj}}
\newcommand{\tfepi}{\mathsf{epi}}
\newcommand{\tftop}{\mathsf{top}}
%\newcommand{\sbrck}[1]{\Vert #1\Vert}
%\newcommand{\strunc}[2]{\Vert #2\Vert_{#1}}
\newcommand{\gobjclass}{{\mathsf{U}^\mfGraph}}
\newcommand{\gcharmap}{\mathsf{fib}}
\newcommand{\diagclass}{\mathsf{T}}
\newcommand{\opdiagclass}{\op{\diagclass}}
\newcommand{\equifibclass}{\diagclass^{\eqv{}{}}}
\newcommand{\universe}{\mathsf{U}}
\newcommand{\catid}[1]{{\catfont{id}_{#1}}}
\newcommand{\isleftfib}{\mathsf{is\usc{}left\usc{}fib}}
\newcommand{\isrightfib}{\mathsf{is\usc{}right\usc{}fib}}
\newcommand{\leftLiftings}{\mathsf{leftLiftings}}
\newcommand{\rightLiftings}{\mathsf{rightLiftings}}
\newcommand{\psh}{\mathsf{Psh}}
\newcommand{\rgclass}{\mathsf{\Omega^{RG}}}
\newcommand{\terms}[2][]{| #2 |^{#1}}
\newcommand{\grconstr}[2]
             {\mathchoice % max size is textstyle size.
             {{\textstyle \int_{#1}}#2}% 
             {\int_{#1}#2}%
             {\int_{#1}#2}%
             {\int_{#1}#2}}
\newcommand{\ctxhom}[3][]{\mathsf{hom}_{#1}(#2,#3)}
\newcommand{\graphcharmapfunc}[1]{\gcharmap_{#1}}
\newcommand{\graphcharmap}[2][]{\graphcharmapfunc{#1}(#2)}
\newcommand{\tfexp}[1]{\mathsf{exp}_{#1}}
\newcommand{\tffamfunc}{\mathsf{fam}}
\newcommand{\tffam}[1]{\tffamfunc(#1)}
\newcommand{\tfev}{\mathsf{ev}}
\newcommand{\tfcomp}{\mathsf{comp}}
\newcommand{\isDec}[1]{\mathsf{is\usc{}decidable}(#1)}
\newcommand{\smal}{\mathcal{S}}
\renewcommand{\modal}{{\ensuremath{\ocircle}}}
\newcommand{\eqrel}{\mathsf{EqRel}}
\newcommand{\piw}{\ensuremath{\Pi\mathsf{W}}} %% to be used in conjunction with -pretopos.
\renewcommand{\sslash}{/\!\!/}
\newcommand{\mprd}[3][]{\Pi^{#1}(#2,#3)}
\newcommand{\msmsym}{\Sigma}
\newcommand{\msm}[2]{\msmsym(#1,#2)}
\newcommand{\mw}[2]{\wtypesym(#1,#2)}
\newcommand{\midt}[1]{\idvartype_#1}
\newcommand{\reflf}[1]{\mathsf{refl}^{#1}}
\newcommand{\tfJ}{\mathsf{J}}
\newcommand{\tftrans}{\mathsf{trans}}
\newcommand{\shapem}{\mathop{\textesh}}

\newcommand{\@gcomp}{\underline}
\newcommand{\gcomp}[1]{{
\renewcommand{\msmsym}{\@gcomp{\Sigma}}
\def\idtypevar##1{\@gcomp{\mathsf{Id}}_{##1}}
\renewcommand{\unit}{\@gcomp{\mathbf{1}}}
\renewcommand{\wtypesym}{\@gcomp{\mathsf{W}}}
\def\reflf##1{\@gcomp{\mathsf{refl}}^{##1}}
#1}}

\newcommand{\tfT}{\mathsf{T}}
\newcommand{\reflsym}{{\mathsf{refl}}}
\newcommand{\strans}[2]{\ensuremath{{#1}_{*}({#2})}}
\newcommand{\eqtype}[1]{\mathsf{Eq}_{#1}}
\newcommand{\eqtoid}[1]{\mathsf{eqtoid}(#1)}
\newcommand{\greek}{\mathrm}
\newcommand{\product}[2]{{#1}\times{#2}}
\newcommand{\pairp}[1]{(#1)}
\newcommand{\jequalizer}[3]{\{#1|#2\jdeq #3\}}
\newcommand{\jequalizerin}[2]{\iota_{#1,#2}}
\newcommand{\tounit}[1]{{!_{#1}}}
\newcommand{\trwk}{\mathsf{trwk}}
\newcommand{\trext}{\mathsf{trext}}
\newcommand{\tfindf}[2][]{\mathsf{ind}_{#2}^{#1}}
\newcommand{\thom}[2]{\mathrm{thom}(#1,#2)}
\newcommand{\thomd}[3]{\mathrm{thom}_{#1}(#2,#3)}

\newcommand{\tfind}[3][]{\tfindf[#1]{#2}(\default@ctxext #3)}
\newcommand{\famtoequifib}{\mathsf{famToEquifib}}
\newcommand{\struct}[1]{\mathop{#1\textnormal{-Struct}}}
\newcommand{\loopspacesym}{\mathsf{\Omega}}
\newcommand{\loopspace}[2][]{\loopspacesym^{#1}(#2)}
\newcommand{\join}[3][]{{#2}\ast_{#1}{#3}}
\newcommand{\bigjoinsym}{\mathop{{\scalebox{2.2}{\raisebox{-0.2ex}{$\ast$}}}}}
\newcommand{\@bigjoin}[2]{\bigjoinsym_{(#1)}\,#2}
\newcommand{\bigjoin}[2]{\mathchoice{\textstyle{\@bigjoin{#1}{#2}}}{\@bigjoin{#1}{#2}}{\@bigjoin{#1}{#2}}{\@bigjoin{#1}{#2}}}
\newcommand{\higherequifibsf}{\mathcal}
\newcommand{\higherequifib}[2]{\higherequifibsf{#1}(#2)}
\newcommand{\underlyinggraph}[1]{U(#1)}
\newcommand{\theequifib}[1]{{\def\higherequifibsf{}#1}}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Categories

\newcommand{\inv}[1]{{#1}^{-1}}
\newcommand{\idtoiso}{\ensuremath{\mathsf{idtoiso}}\xspace}
\newcommand{\isotoid}{\ensuremath{\mathsf{isotoid}}\xspace}
\newcommand{\op}[1]{{{#1}^\mathsf{op}}}
\newcommand{\y}{\ensuremath{\mathbf{y}}\xspace}
\newcommand{\dgr}[1]{{#1}^{\dagger}}
\newcommand{\unitaryiso}{\mathrel{\cong^\dagger}}
\newcommand{\cteqv}[2]{\ensuremath{#1 \simeq #2}\xspace}
\newcommand{\cteqvsym}{\simeq}     % Symbol for equivalence of categories

%%% Arrows
\newcommand{\epi}{\ensuremath{\twoheadrightarrow}}
\newcommand{\mono}{\ensuremath{\rightarrowtail}}

%%% Semigroup structure
\newcommand{\semigroupstrsym}{\ensuremath{\mathsf{SemigroupStr}}}
\newcommand{\semigroupstr}[1]{\ensuremath{\mathsf{SemigroupStr}}(#1)}
\newcommand{\semigroup}[0]{\ensuremath{\mathsf{Semigroup}}}

%%% Macros for HITs
\newcommand{\cc}{\mathsf{c}}
\newcommand{\pp}{\mathsf{p}}
\newcommand{\cct}{\widetilde{\mathsf{c}}}
\newcommand{\ppt}{\widetilde{\mathsf{p}}}
\newcommand{\Wtil}{\ensuremath{\widetilde{W}}\xspace}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Set theory

\newcommand{\vset}{\mathsf{set}}  % point constructor for cummulative hierarchy V
\def\cd{\tproj0}
\newcommand{\inj}{\ensuremath{\mathsf{inj}}} % type of injections
\newcommand{\acc}{\ensuremath{\mathsf{acc}}} % accessibility

\newcommand{\atMostOne}{\mathsf{atMostOne}}

\newcommand{\power}[1]{\mathcal{P}(#1)} % power set
\newcommand{\powerp}[1]{\mathcal{P}_+(#1)} % inhabited power set

\newcommand{\ucomp}[1]{\hat{#1}}
\newcommand{\fin}{\mathsf{Fin}}
\newcommand{\finsetf}{\mathsf{Fin}}
\newcommand{\finset}[1]{\finsetf(#1)}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Group theory

\newcommand{\symmetric}[1]{S_{#1}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% When investigation pointed structures we use the \pt macro.

\newcommand*{\pt}{\ast}
\newcommand*{\bN}{{\mathbb{N}}}
\newcommand*{\bF}{{\mathbb{F}}}
\newcommand*{\bZ}{{\mathbb{Z}}}
\newcommand*{\bR}{{\mathbb{R}}}
\newcommand*{\bC}{{\mathbb{C}}}
\newcommand*{\bH}{{\mathbb{H}}}
\newcommand*{\bS}{{\mathbb{S}}}
\newcommand*{\RP}{{\mathbb{R}\mathrm{P}}}
\newcommand*{\CP}{{\mathbb{C}\mathrm{P}}}
\newcommand*{\HP}{{\mathbb{H}\mathrm{P}}}
\newcommand*{\GType}{\mathrm{GType}} % (k-tuply groupal) n-types
\newcommand*{\Grp}{\mathrm{\texthyphen Group}} % higher groups
\newcommand*{\Group}{\mathrm{Group}}
\newcommand*{\AbGroup}{\mathrm{AbGroup}}
\newcommand*{\iDecat}{\mathrm{\infty\text{-}\mathrm{Decat}}}
\newcommand*{\iDisc}{\mathrm{\infty\text{-}\mathrm{Disc}}}
\newcommand*{\leanref}[1]{}
\newcommand*{\ditto}{--- \raisebox{-0.5ex}{''} ---}
\newcommand*\Sym{S}
\DeclareMathOperator\B{B}
\newcommand*\BS{\mathop{BS}} 
\newcommand*{\dblslash}{\mathbin{/\kern-3pt/}}
\DeclareMathOperator\Th{Th}
\DeclareMathOperator\Decat{Decat}
\DeclareMathOperator\Disc{Disc}
\DeclareMathOperator\aut{Aut}
\DeclarePairedDelimiter\angled{\langle}{\rangle}
\newcommand{\texthyphen}{\text{-}}
\newcommand{\kersym}{\mathcal{K}}
\newcommand{\qsym}{\mathcal{Q}}
\mathchardef\hyph="2D
\newcommand{\kshiftequiv}{\mathsf{kshift\underline{~}equiv}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% OPERATIONS ON GRAPHS
%%%%
%%%% First of all, each graph has a type of vertices and a type of edges. The
%%%% type of vertices of a graph $\Gamma$ is denoted by $\pts{\Gamma}$;
%%%% and likewise for the type of edges.

\makeatletter
\newcommand{\pts}[1]{{\@graphop@nested{#1}}_{0}}
\newcommand{\edg}[1]{{\@graphop@nested{#1}}_{1}}
\newcommand{\rfx}[1]{\mathsf{rfx}_{\@graphop@nested{#1}}}
\newcommand{\@graphop@nested}[1]
  {\@ifnextchar\ctxext{\@ctxext@nested}
      {\@ifnextchar\undergraph{\@undergraph@nested}
         {\@ifnextchar\underovergraph{\@underovergraph@nested}{}}}
    #1}
\makeatother

%%%% The following operations of \undergraph and \underovergraph are used to
%%%% define the free category and the free groupoid of a graph, respectively

\makeatletter
\newcommand{\@undergraphtest}[2]{\@ifnextchar({#1}{#2}}
\newcommand{\undergraph}[2]{\@undergraphtest{\@undergraph@parens{#1}{#2}}{\@undergraph{#1}{#2}}}
\newcommand{\@undergraph}[2]{{#2/#1}}
\newcommand{\@undergraph@nested}[3]{\@undergraph@parens{#2}{#3}}
\newcommand{\@undergraph@parens}[2]{(\@undergraph{#1}{#2})}
\makeatother

\makeatletter
\newcommand{\underovergraph}[2]{\@underovergraphtest{\@underovergraph@parens{#1}{#2}}{\@underovergraph{#1}{#2}}}
\newcommand{\@underovergraph}[2]{{#2}\,{\parallel}\,{#1}}
\newcommand{\@underovergraphtest}{\@undergraphtest}
\newcommand{\@underovergraph@parens}[2]{(\@underovergraph{#1}{#2})}
\newcommand{\@underovergraph@nested}[3]{\@underovergraph@parens{#2}{#3}}
\makeatother

\newcommand{\graphid}[1]{\mathrm{id}_{#1}}
\newcommand{\freecat}[1]{\mathcal{C}(#1)}
\newcommand{\freegrpd}[1]{\mathcal{G}(#1)}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newcommand{\prekersym}{k}
\newtheorem{prob}[thm]{Problem}

\newcommand{\pto}{\to_{\ast}}
\newcommand{\suspsym}{\mathsf{\Sigma}}
\newcommand{\lra}       {\longrightarrow}
\newcommand{\LLL}{\mathcal{L}}
\newcommand{\RRR}{\mathcal{R}}
\newcommand{\sto}{\!\to\!}
\newcommand{\degg}{\mathsf{deg}}
\newcommand{\Hom}{\mathsf{Hom}}
\newcommand{\llra}[1]   {\stackrel{#1}{\lra}}  % labelled long right arrow
\newcommand{\longhookrightarrow}{\lhook\joinrel\lra}
\newcommand{\open}[1]{\mathsf{Op}_{#1}}
\newcommand{\closed}[1]{\mathsf{Cl}_{#1}}
\newcommand{\truncmod}[1]{\mathcal{T}_{#1}}
\newcommand{\shmod}[1]{\mathcal{S}\mathit{h}_{#1}}

\newcommand{\fillers}[1]{\mathsf{fill}_{\mathcal{L},\mathcal{R}}(#1)}
\newcommand{\cL}{\mathcal{L}}
\newcommand{\cR}{\mathcal{R}}
\newcommand{\rsu}[1][\UU]{\mathsf{RSU}_{#1}}
\newcommand{\mdl}[1][\UU]{\mathsf{Mdl}_{#1}}
\newcommand{\lex}[1][\UU]{\mathsf{Lex}_{#1}}
\newcommand{\tpl}[1][\UU]{\mathsf{Top}_{#1}}
\newcommand{\accrsu}[1][\UU]{\mathsf{AccRSU}_{#1}}
\newcommand{\accmdl}[1][\UU]{\mathsf{AccMdl}_{#1}}
\newcommand{\acclex}[1][\UU]{\mathsf{AccLex}_{#1}}

\newcommand{\rcoeq}{\mathsf{rcoeq}}

\DeclarePairedDelimiter\norm{\lVert}{\rVert}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Some tikz macros to typeset diagrams uniformly.

\tikzset{patharrow/.style={double,double equal sign distance,-,font=\scriptsize}}
\tikzset{description/.style={fill=white,inner sep=2pt}}
\tikzset{fib/.style={->>,font=\scriptsize}}
\tikzset{%
    adjunction/.style={%
        draw=none,
        every to/.append style={%
            edge node={node [sloped, allow upside down, auto=false]{$\dashv$}}}
    }
}

%% Used for extra wide diagrams, e.g. when the label is too large otherwise.
\tikzset{commutative diagrams/column sep/Huge/.initial=18ex}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% New environment for constructions.

%\expandafter\let\expandafter\oldproof\csname\string\proof\endcsname
%\let\oldendproof\endproof
\newenvironment{constr}{%
  \begin{proof}[Construction]%
}{\end{proof}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% New theorem environment for conjectures.

\defthm{conj}{Conjecture}{Conjectures}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% The following environment for desiderata should not be there. It is better
%%%% to use the issue tracker for desiderata.

\newenvironment{desiderata}{\begingroup\color{blue}\textbf{Desiderata.}}
{\endgroup}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% The following piece of code from tex.stackexchange:
%%%%
%%%% http://tex.stackexchange.com/a/55180/14653
%%%%
%%%% We include it so that inference rules in align environments have enough
%%%% vertical space.

\newlength\minalignvsep

\def\align@preamble{%
   &\hfil
    \setboxz@h{\@lign$\m@th\displaystyle{##}$}%
    \ifnum\row@>\@ne
    \ifdim\ht\z@>\ht\strutbox@
    \dimen@\ht\z@
    \advance\dimen@\minalignvsep
    \ht\strutbox\dimen@
    \fi\fi
    \strut@
    \ifmeasuring@\savefieldlength@\fi
    \set@field
    \tabskip\z@skip
   &\setboxz@h{\@lign$\m@th\displaystyle{{}##}$}%
    \ifnum\row@>\@ne
    \ifdim\ht\z@>\ht\strutbox@
    \dimen@\ht\z@
    \advance\dimen@\minalignvsep
    \ht\strutbox@\dimen@
    \fi\fi
    \strut@
    \ifmeasuring@\savefieldlength@\fi
    \set@field
    \hfil
    \tabskip\alignsep@
}

\minalignvsep.2em

\allowdisplaybreaks

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%\setdescription[1]{itemsep=-0.2em}

\endinput
